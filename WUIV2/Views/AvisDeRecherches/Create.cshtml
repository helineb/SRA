@model WUIV2.Models.ViewModel.VMAvisDeRecherche

@{
    ViewBag.Title = "Ajouter";
}

<h2>Ajouter</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AvisDeRecherche</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.avisDeRecherche.titre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.avisDeRecherche.titre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.avisDeRecherche.titre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.avisDeRecherche.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.avisDeRecherche.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.avisDeRecherche.description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.avisDeRecherche.animal, "Animal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("animal", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.avisDeRecherche.animal.nom, "", new { @class = "text-danger" })
                <p>
                    @Html.ActionLink("Créer d'abord un animal", "Create", "Animals")
                </p>
            </div>
        </div>

        <div id="map_canvas" style="width:80%; height:80%"></div>
        <script type="text/javascript">
            function initialize() {
                var latlng = new google.maps.LatLng(40.716948, -74.003563);
                var options = { zoom: 14, center: latlng,
		        mapTypeId: google.maps.MapTypeId.ROADMAP};
                var map = new google.maps.Map(document.getElementById
			        ("map_canvas"), options);
            }
            $(function () {
                initialize();
            });

        </script> 

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Revenir à la liste", "Index")
</div>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script> 